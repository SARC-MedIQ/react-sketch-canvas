{"version":3,"sources":["../../node_modules/regenerator-runtime/runtime.js","../../src/Paths/index.tsx","../../src/Canvas/index.tsx","../../src/ReactSketchCanvas/index.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["runtime","exports","undefined","Op","Object","prototype","hasOwn","hasOwnProperty","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","obj","key","value","defineProperty","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","_invoke","state","GenStateSuspendedStart","method","arg","GenStateExecuting","Error","GenStateCompleted","doneResult","delegate","delegateResult","maybeInvokeDelegate","ContinueSentinel","sent","_sent","dispatchException","abrupt","record","tryCatch","type","done","GenStateSuspendedYield","makeInvokeMethod","fn","call","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","this","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","AsyncIterator","PromiseImpl","invoke","resolve","reject","result","__await","then","unwrapped","error","previousPromise","callInvokeWithMethodAndArg","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","length","i","displayName","isGeneratorFunction","genFun","ctor","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","keys","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","thrown","delegateYield","module","regeneratorRuntime","accidentalStrictMode","globalThis","Function","SvgPath","paths","id","strokeWidth","strokeColor","command","bezierCommand","x","y","radius","cx","cy","r","stroke","fill","d","point","acc","strokeLinecap","controlPoint","controlPoints","current","previous","p","n","smoothing","o","pointA","lengthX","pointB","lengthY","Math","angle","line","cpsX","cpsY","a","cpeX","cpeY","Paths","React","path","loadImage","url","img","getCanvasWithViewBox","canvas","svgCanvas","width","height","Canvas","isDrawing","onPointerDown","onPointerMove","onPointerUp","className","canvasColor","backgroundImage","exportWithBackgroundImage","preserveBackgroundImageAspectRatio","allowOnlyPointerType","style","border","borderRadius","canvasRef","getCoordinates","boundingArea","scrollLeft","window","scrollTop","pointerEvent","handlePointerUp","event","exportImage","canvasSketch","btoa","loadImagePromises","console","renderCanvas","document","images","exportSvg","e","eraserPaths","currentGroup","pathGroups","arrayGroup","role","ref","touchAction","version","baseProfile","xmlns","xmlnsXlink","display","eraserPath","b","patternUnits","xlinkHref","preserveAspectRatio","maskUnits","href","Array","j","k","mask","pathGroup","ReactSketchCanvas","eraserWidth","onChange","onStroke","withTimestamp","drawMode","setDrawMode","setIsDrawing","resetStack","setResetStack","undoStack","setUndoStack","currentPaths","setCurrentPaths","liftStrokeUp","lastStroke","eraseMode","clearCanvas","undo","redo","exportPaths","loadPaths","getSketchingTime","sketchingTime","startTimestamp","endTimestamp","totalSketchingTime","resetCanvas","Date","currentStroke","updatedStroke","InputField","fieldName","canvasProps","setCanvasProps","htmlFor","target","prevCanvasProps","min","max","App","useState","borderRight","createRef","dataURI","setDataURI","svg","setSVG","setPaths","isEraser","setLastStroke","pathsToLoad","setPathsToLoad","setSketchingTime","exportImageType","setexportImageType","imageExportHandler","exportedDataURI","svgExportHandler","getSketchingTimeHandler","currentSketchingTime","buttonsWithHandlers","src","alt","map","title","checked","JSON","parse","rows","defaultValue","stringify","onClick","pathsToUpdate","updatedPaths","label","handler","themeColor","createButton","readOnly","toFixed","dangerouslySetInnerHTML","__html","reportWebVitals","onPerfEntry","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.a4b8c5c6.chunk.js","sourcesContent":["/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function define(obj, key, value) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n    return obj[key];\n  }\n  try {\n    // IE 8 has a broken Object.defineProperty that only works on DOM objects.\n    define({}, \"\");\n  } catch (err) {\n    define = function(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  define(IteratorPrototype, iteratorSymbol, function () {\n    return this;\n  });\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = GeneratorFunctionPrototype;\n  define(Gp, \"constructor\", GeneratorFunctionPrototype);\n  define(GeneratorFunctionPrototype, \"constructor\", GeneratorFunction);\n  GeneratorFunction.displayName = define(\n    GeneratorFunctionPrototype,\n    toStringTagSymbol,\n    \"GeneratorFunction\"\n  );\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      define(prototype, method, function(arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      define(genFun, toStringTagSymbol, \"GeneratorFunction\");\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return PromiseImpl.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return PromiseImpl.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  define(AsyncIterator.prototype, asyncIteratorSymbol, function () {\n    return this;\n  });\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    if (PromiseImpl === void 0) PromiseImpl = Promise;\n\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList),\n      PromiseImpl\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  define(Gp, toStringTagSymbol, \"Generator\");\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  define(Gp, iteratorSymbol, function() {\n    return this;\n  });\n\n  define(Gp, \"toString\", function() {\n    return \"[object Generator]\";\n  });\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, in modern engines\n  // we can explicitly access globalThis. In older engines we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  if (typeof globalThis === \"object\") {\n    globalThis.regeneratorRuntime = runtime;\n  } else {\n    Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n  }\n}\n","import * as React from 'react';\nimport { CanvasPath, Point } from '../types';\n\nexport type SvgPathProps = {\n  // List of points to create the stroke\n  paths: Point[];\n  // Unique ID\n  id: string;\n  // Width of the stroke\n  strokeWidth: number;\n  // Color of the stroke\n  strokeColor: string;\n  // Bezier command to smoothen the line\n  command?: (point: Point, i: number, a: Point[]) => string;\n};\n\n/**\n * Generate SVG Path tag from the given points\n */\nexport const SvgPath = ({\n  paths,\n  id,\n  strokeWidth,\n  strokeColor,\n  command = bezierCommand,\n}: SvgPathProps): JSX.Element => {\n  if (paths.length === 1) {\n    const { x, y } = paths[0];\n    const radius = strokeWidth / 2;\n\n    return (\n      <circle\n        key={id}\n        id={id}\n        cx={x}\n        cy={y}\n        r={radius}\n        stroke={strokeColor}\n        fill={strokeColor}\n      />\n    );\n  }\n\n  const d = paths.reduce(\n    (acc, point, i, a) =>\n      i === 0 ? `M ${point.x},${point.y}` : `${acc} ${command(point, i, a)}`,\n    ''\n  );\n\n  return (\n    <path\n      key={id}\n      id={id}\n      d={d}\n      fill=\"none\"\n      strokeLinecap=\"round\"\n      stroke={strokeColor}\n      strokeWidth={strokeWidth}\n    />\n  );\n};\n\nexport const line = (pointA: Point, pointB: Point) => {\n  const lengthX = pointB.x - pointA.x;\n  const lengthY = pointB.y - pointA.y;\n\n  return {\n    length: Math.sqrt(lengthX ** 2 + lengthY ** 2),\n    angle: Math.atan2(lengthY, lengthX),\n  };\n};\n\ntype ControlPoints = {\n  current: Point;\n  previous?: Point;\n  next?: Point;\n  reverse?: boolean;\n};\n\nconst controlPoint = (controlPoints: ControlPoints): [number, number] => {\n  const { current, next, previous, reverse } = controlPoints;\n\n  const p = previous || current;\n  const n = next || current;\n\n  const smoothing = 0.2;\n\n  const o = line(p, n);\n\n  const angle = o.angle + (reverse ? Math.PI : 0);\n  const length = o.length * smoothing;\n\n  const x = current.x + Math.cos(angle) * length;\n  const y = current.y + Math.sin(angle) * length;\n\n  return [x, y];\n};\n\nexport const bezierCommand = (point: Point, i: number, a: Point[]): string => {\n  let cpsX = null;\n  let cpsY = null;\n\n  switch (i) {\n    case 0:\n      [cpsX, cpsY] = controlPoint({\n        current: point,\n      });\n      break;\n    case 1:\n      [cpsX, cpsY] = controlPoint({\n        current: a[i - 1],\n        next: point,\n      });\n      break;\n    default:\n      [cpsX, cpsY] = controlPoint({\n        current: a[i - 1],\n        previous: a[i - 2],\n        next: point,\n      });\n      break;\n  }\n\n  const [cpeX, cpeY] = controlPoint({\n    current: point,\n    previous: a[i - 1],\n    next: a[i + 1],\n    reverse: true,\n  });\n\n  return `C ${cpsX},${cpsY} ${cpeX},${cpeY} ${point.x}, ${point.y}`;\n};\n\ntype PathProps = {\n  paths: CanvasPath[];\n};\n\nconst Paths = ({ paths }: PathProps): JSX.Element => (\n  <React.Fragment>\n    {paths.map((path: CanvasPath, id: number) => (\n      <SvgPath\n        key={id.toString()}\n        paths={path.paths}\n        id={id.toString()}\n        strokeWidth={path.strokeWidth}\n        strokeColor={path.strokeColor}\n        command={bezierCommand}\n      />\n    ))}\n  </React.Fragment>\n);\n\nexport default Paths;\n","import * as React from 'react';\nimport Paths, { SvgPath } from '../Paths';\nimport { CanvasPath, ExportImageType, Point } from '../types';\n\nconst loadImage = (url: string): Promise<HTMLImageElement> =>\n  new Promise((resolve, reject) => {\n    const img = new Image();\n    img.addEventListener('load', () => {\n      if (img.width > 0) {\n        resolve(img);\n      }\n      reject('Image not found');\n    });\n    img.addEventListener('error', (err) => reject(err));\n    img.src = url;\n    img.setAttribute('crossorigin', 'anonymous');\n  });\n\nfunction getCanvasWithViewBox(canvas: HTMLDivElement) {\n  const svgCanvas = canvas.firstChild?.cloneNode(true) as SVGElement;\n\n  const width = canvas.offsetWidth;\n  const height = canvas.offsetHeight;\n\n  svgCanvas.setAttribute('viewBox', `0 0 ${width} ${height}`);\n\n  svgCanvas.setAttribute('width', width.toString());\n  svgCanvas.setAttribute('height', height.toString());\n  return { svgCanvas, width, height };\n}\n\nexport interface CanvasProps {\n  paths: CanvasPath[];\n  isDrawing: boolean;\n  className: string;\n  onPointerDown: (point: Point) => void;\n  onPointerMove: (point: Point) => void;\n  onPointerUp: () => void;\n  width: string;\n  height: string;\n  canvasColor: string;\n  backgroundImage: string;\n  exportWithBackgroundImage: boolean;\n  preserveBackgroundImageAspectRatio: string;\n  allowOnlyPointerType: string;\n  style: React.CSSProperties;\n}\n\nexport interface CanvasRef {\n  exportImage: (imageType: ExportImageType) => Promise<string>;\n  exportSvg: () => Promise<string>;\n}\n\nexport const Canvas = React.forwardRef<CanvasRef, CanvasProps>((props, ref) => {\n  const {\n    paths,\n    isDrawing,\n    onPointerDown,\n    onPointerMove,\n    onPointerUp,\n    width = '100%',\n    height = '100%',\n    className = '',\n    canvasColor = 'red',\n    backgroundImage = '',\n    exportWithBackgroundImage = false,\n    preserveBackgroundImageAspectRatio = 'none',\n    allowOnlyPointerType = 'all',\n    style = {\n      border: '0.0625rem solid #9c9c9c',\n      borderRadius: '0.25rem',\n    },\n  } = props;\n\n  const canvasRef = React.useRef<HTMLDivElement>(null);\n\n  // Converts mouse coordinates to relative coordinate based on the absolute position of svg\n  const getCoordinates = (\n    pointerEvent: React.PointerEvent<HTMLDivElement>\n  ): Point => {\n    const boundingArea = canvasRef.current?.getBoundingClientRect();\n\n    const scrollLeft = window.scrollX ?? 0;\n    const scrollTop = window.scrollY ?? 0;\n\n    if (!boundingArea) {\n      return { x: 0, y: 0 };\n    }\n\n    const point: Point = {\n      x: pointerEvent.pageX - boundingArea.left - scrollLeft,\n      y: pointerEvent.pageY - boundingArea.top - scrollTop,\n    };\n\n    return point;\n  };\n\n  /* Mouse Handlers - Mouse down, move and up */\n\n  const handlePointerDown = (\n    event: React.PointerEvent<HTMLDivElement>\n  ): void => {\n    // Allow only chosen pointer type\n\n    if (\n      allowOnlyPointerType !== 'all' &&\n      event.pointerType !== allowOnlyPointerType\n    ) {\n      return;\n    }\n\n    if (event.pointerType === 'mouse' && event.button !== 0) return;\n\n    const point = getCoordinates(event);\n\n    onPointerDown(point);\n  };\n\n  const handlePointerMove = (\n    event: React.PointerEvent<HTMLDivElement>\n  ): void => {\n    if (!isDrawing) return;\n\n    // Allow only chosen pointer type\n    if (\n      allowOnlyPointerType !== 'all' &&\n      event.pointerType !== allowOnlyPointerType\n    ) {\n      return;\n    }\n\n    const point = getCoordinates(event);\n\n    onPointerMove(point);\n  };\n\n  const handlePointerUp = (\n    event: React.PointerEvent<HTMLDivElement> | PointerEvent\n  ): void => {\n    if (event.pointerType === 'mouse' && event.button !== 0) return;\n\n    // Allow only chosen pointer type\n    if (\n      allowOnlyPointerType !== 'all' &&\n      event.pointerType !== allowOnlyPointerType\n    ) {\n      return;\n    }\n\n    onPointerUp();\n  };\n\n  /* Mouse Handlers ends */\n\n  React.useImperativeHandle(ref, () => ({\n    exportImage: (imageType: ExportImageType): Promise<string> => {\n      return new Promise<string>(async (resolve, reject) => {\n        try {\n          const canvas = canvasRef.current;\n\n          if (!canvas) {\n            throw Error('Canvas not rendered yet');\n          }\n\n          const { svgCanvas, width, height } = getCanvasWithViewBox(canvas);\n          const canvasSketch = `data:image/svg+xml;base64,${btoa(\n            svgCanvas.outerHTML\n          )}`;\n\n          const loadImagePromises = [await loadImage(canvasSketch)];\n\n          if (exportWithBackgroundImage) {\n            try {\n              const img = await loadImage(backgroundImage);\n              loadImagePromises.push(img);\n            } catch (error) {\n              console.warn(\n                'exportWithBackgroundImage props is set without a valid background image URL. This option is ignored'\n              );\n            }\n          }\n\n          Promise.all(loadImagePromises)\n            .then((images) => {\n              const renderCanvas = document.createElement('canvas');\n              renderCanvas.setAttribute('width', width.toString());\n              renderCanvas.setAttribute('height', height.toString());\n              const context = renderCanvas.getContext('2d');\n\n              if (!context) {\n                throw Error('Canvas not rendered yet');\n              }\n\n              images.reverse().forEach((image) => {\n                context.drawImage(image, 0, 0);\n              });\n\n              resolve(renderCanvas.toDataURL(`image/${imageType}`));\n            })\n            .catch((e) => {\n              throw e;\n            });\n        } catch (e) {\n          reject(e);\n        }\n      });\n    },\n    exportSvg: (): Promise<string> => {\n      return new Promise<string>((resolve, reject) => {\n        try {\n          const canvas = canvasRef.current ?? null;\n\n          if (canvas !== null) {\n            const { svgCanvas } = getCanvasWithViewBox(canvas);\n\n            if (exportWithBackgroundImage) {\n              resolve(svgCanvas.outerHTML);\n              return;\n            }\n\n            svgCanvas.querySelector('#background')?.remove();\n            svgCanvas\n              .querySelector('#canvas-background')\n              ?.setAttribute('fill', canvasColor);\n\n            resolve(svgCanvas.outerHTML);\n          }\n\n          reject(new Error('Canvas not loaded'));\n        } catch (e) {\n          reject(e);\n        }\n      });\n    },\n  }));\n\n  /* Add event listener to Mouse up and Touch up to\nrelease drawing even when point goes out of canvas */\n  React.useEffect(() => {\n    document.addEventListener('pointerup', handlePointerUp);\n    return () => {\n      document.removeEventListener('pointerup', handlePointerUp);\n    };\n  }, [handlePointerUp]);\n\n  const eraserPaths = paths.filter((path) => !path.drawMode);\n\n  let currentGroup = 0;\n  const pathGroups = paths.reduce<CanvasPath[][]>(\n    (arrayGroup, path) => {\n      if (!path.drawMode) {\n        currentGroup += 1;\n        return arrayGroup;\n      }\n\n      if (arrayGroup[currentGroup] === undefined) {\n        arrayGroup[currentGroup] = [];\n      }\n\n      arrayGroup[currentGroup].push(path);\n      return arrayGroup;\n    },\n    [[]]\n  );\n\n  return (\n    <div\n      role=\"presentation\"\n      aria-label=\"react-sketch-canvas\"\n      ref={canvasRef}\n      className={className}\n      style={{\n        touchAction: 'none',\n        width,\n        height,\n        ...style,\n      }}\n      touch-action=\"none\"\n      onPointerDown={handlePointerDown}\n      onPointerMove={handlePointerMove}\n      onPointerUp={handlePointerUp}\n    >\n      <svg\n        version=\"1.1\"\n        baseProfile=\"full\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        xmlnsXlink=\"http://www.w3.org/1999/xlink\"\n        style={{\n          width: '100%',\n          height: '100%',\n        }}\n      >\n        <g id=\"eraser-stroke-group\" display=\"none\">\n          <rect\n            id=\"mask-background\"\n            x=\"0\"\n            y=\"0\"\n            width=\"100%\"\n            height=\"100%\"\n            fill=\"white\"\n          />\n          {eraserPaths.map((eraserPath, i) => (\n            <SvgPath\n              key={`eraser-${i}`}\n              id={`eraser-${i}`}\n              paths={eraserPath.paths}\n              strokeColor=\"#000000\"\n              strokeWidth={eraserPath.strokeWidth}\n            />\n          ))}\n        </g>\n        <defs>\n          {backgroundImage && (\n            <pattern\n              id=\"background\"\n              x=\"0\"\n              y=\"0\"\n              width=\"100%\"\n              height=\"100%\"\n              patternUnits=\"userSpaceOnUse\"\n            >\n              <image\n                x=\"0\"\n                y=\"0\"\n                width=\"100%\"\n                height=\"100%\"\n                xlinkHref={backgroundImage}\n                preserveAspectRatio={preserveBackgroundImageAspectRatio}\n              ></image>\n            </pattern>\n          )}\n\n          {eraserPaths.map((_, i) => (\n            <mask\n              id={`eraser-mask-${i}`}\n              key={`eraser-mask-${i}`}\n              maskUnits=\"userSpaceOnUse\"\n            >\n              <use href=\"#mask-background\" />\n              {Array.from(\n                { length: eraserPaths.length - i },\n                (_, j) => j + i\n              ).map((k) => (\n                <use key={k.toString()} href={`#eraser-${k.toString()}`} />\n              ))}\n            </mask>\n          ))}\n        </defs>\n        <g id=\"canvas-background-group\">\n          <rect\n            id=\"canvas-background\"\n            x=\"0\"\n            y=\"0\"\n            width=\"100%\"\n            height=\"100%\"\n            fill={backgroundImage ? 'url(#background)' : canvasColor}\n          />\n        </g>\n        {pathGroups.map((pathGroup, i) => (\n          <g\n            id={`stroke-group-${i}`}\n            key={`stroke-group-${i}`}\n            mask={`url(#eraser-mask-${i})`}\n          >\n            <Paths paths={pathGroup} />\n          </g>\n        ))}\n      </svg>\n    </div>\n  );\n});\n","import * as React from 'react';\nimport { Canvas, CanvasRef } from '../Canvas';\nimport { CanvasPath, ExportImageType, Point } from '../types';\n\nexport type ReactSketchCanvasStates = {};\n\n/* Props validation */\nexport interface ReactSketchCanvasProps {\n  width?: string;\n  height?: string;\n  className?: string;\n  strokeColor?: string;\n  canvasColor?: string;\n  backgroundImage?: string;\n  exportWithBackgroundImage?: boolean;\n  preserveBackgroundImageAspectRatio?: string;\n  strokeWidth?: number;\n  eraserWidth?: number;\n  allowOnlyPointerType?: string;\n  onChange?: (updatedPaths: CanvasPath[]) => void;\n  onStroke?: (path: CanvasPath, isEraser: boolean) => void;\n  style?: React.CSSProperties;\n  withTimestamp?: boolean;\n}\n\nexport interface ReactSketchCanvasRef {\n  eraseMode: (erase: boolean) => void;\n  clearCanvas: () => void;\n  undo: () => void;\n  redo: () => void;\n  exportImage: (imageType: ExportImageType) => Promise<string>;\n  exportSvg: () => Promise<string>;\n  exportPaths: () => Promise<CanvasPath[]>;\n  loadPaths: (paths: CanvasPath[]) => void;\n  getSketchingTime: () => Promise<number>;\n  resetCanvas: () => void;\n}\n\nexport const ReactSketchCanvas = React.forwardRef<\n  ReactSketchCanvasRef,\n  ReactSketchCanvasProps\n>((props, ref) => {\n  const {\n    width = '100%',\n    height = '100%',\n    className = '',\n    canvasColor = 'white',\n    strokeColor = 'red',\n    backgroundImage = '',\n    exportWithBackgroundImage = false,\n    preserveBackgroundImageAspectRatio = 'none',\n    strokeWidth = 4,\n    eraserWidth = 8,\n    allowOnlyPointerType = 'all',\n    style = {\n      border: '0.0625rem solid #9c9c9c',\n      borderRadius: '0.25rem',\n    },\n    onChange = (_paths: CanvasPath[]): void => {},\n    onStroke = (_path: CanvasPath, _isEraser: boolean): void => {},\n    withTimestamp = false,\n  } = props;\n\n  const svgCanvas = React.createRef<CanvasRef>();\n  const [drawMode, setDrawMode] = React.useState<boolean>(true);\n  const [isDrawing, setIsDrawing] = React.useState<boolean>(false);\n  const [resetStack, setResetStack] = React.useState<CanvasPath[]>([]);\n  const [undoStack, setUndoStack] = React.useState<CanvasPath[]>([]);\n  const [currentPaths, setCurrentPaths] = React.useState<CanvasPath[]>([]);\n\n  const liftStrokeUp = React.useCallback((): void => {\n    const lastStroke = currentPaths.at(-1);\n\n    if (lastStroke === undefined) {\n      console.warn('No stroke found!');\n      return;\n    }\n\n    onStroke(lastStroke, !lastStroke.drawMode);\n  }, [isDrawing]);\n\n  React.useEffect(() => {\n    liftStrokeUp();\n  }, [isDrawing]);\n\n  React.useEffect(() => {\n    onChange(currentPaths);\n  }, [currentPaths]);\n\n  React.useImperativeHandle(ref, () => ({\n    eraseMode: (erase: boolean): void => {\n      setDrawMode(!erase);\n    },\n    clearCanvas: (): void => {\n      setResetStack([...currentPaths]);\n      setCurrentPaths([]);\n    },\n    undo: (): void => {\n      // If there was a last reset then\n      if (resetStack.length !== 0) {\n        setCurrentPaths([...resetStack]);\n        setResetStack([]);\n\n        return;\n      }\n\n      setUndoStack((undoStack) => [...undoStack, ...currentPaths.slice(-1)]);\n      setCurrentPaths((currentPaths) => currentPaths.slice(0, -1));\n    },\n    redo: (): void => {\n      // Nothing to Redo\n      if (undoStack.length === 0) return;\n\n      setCurrentPaths((currentPaths) => [\n        ...currentPaths,\n        ...undoStack.slice(-1),\n      ]);\n      setUndoStack((undoStack) => undoStack.slice(0, -1));\n    },\n    exportImage: (imageType: ExportImageType): Promise<string> => {\n      const exportImage = svgCanvas.current?.exportImage;\n\n      if (!exportImage) {\n        throw Error('Export function called before canvas loaded');\n      } else {\n        return exportImage(imageType);\n      }\n    },\n    exportSvg: (): Promise<string> => {\n      return new Promise<string>((resolve, reject) => {\n        const exportSvg = svgCanvas.current?.exportSvg;\n\n        if (!exportSvg) {\n          reject(Error('Export function called before canvas loaded'));\n        } else {\n          exportSvg()\n            .then((data) => {\n              resolve(data);\n            })\n            .catch((e) => {\n              reject(e);\n            });\n        }\n      });\n    },\n    exportPaths: (): Promise<CanvasPath[]> => {\n      return new Promise<CanvasPath[]>((resolve, reject) => {\n        try {\n          resolve(currentPaths);\n        } catch (e) {\n          reject(e);\n        }\n      });\n    },\n    loadPaths: (paths: CanvasPath[]): void => {\n      setCurrentPaths((currentPaths) => [...currentPaths, ...paths]);\n    },\n    getSketchingTime: (): Promise<number> => {\n      return new Promise<number>((resolve, reject) => {\n        if (!withTimestamp) {\n          reject(new Error(\"Set 'withTimestamp' prop to get sketching time\"));\n        }\n\n        try {\n          const sketchingTime = currentPaths.reduce(\n            (totalSketchingTime, path) => {\n              const startTimestamp = path.startTimestamp ?? 0;\n              const endTimestamp = path.endTimestamp ?? 0;\n\n              return totalSketchingTime + (endTimestamp - startTimestamp);\n            },\n            0\n          );\n\n          resolve(sketchingTime);\n        } catch (e) {\n          reject(e);\n        }\n      });\n    },\n    resetCanvas: (): void => {\n      setResetStack([]);\n      setUndoStack([]);\n      setCurrentPaths([]);\n    },\n  }));\n\n  const handlePointerDown = (point: Point): void => {\n    setIsDrawing(true);\n    setUndoStack([]);\n\n    let stroke: CanvasPath = {\n      drawMode: drawMode,\n      strokeColor: drawMode ? strokeColor : '#000000', // Eraser using mask\n      strokeWidth: drawMode ? strokeWidth : eraserWidth,\n      paths: [point],\n    };\n\n    if (withTimestamp) {\n      stroke = {\n        ...stroke,\n        startTimestamp: Date.now(),\n        endTimestamp: 0,\n      };\n    }\n\n    setCurrentPaths((currentPaths) => [...currentPaths, stroke]);\n  };\n\n  const handlePointerMove = (point: Point): void => {\n    if (!isDrawing) return;\n\n    const currentStroke = currentPaths.slice(-1)[0];\n    const updatedStroke = {\n      ...currentStroke,\n      paths: [...currentStroke.paths, point],\n    };\n    setCurrentPaths((currentPaths) => [\n      ...currentPaths.slice(0, -1),\n      updatedStroke,\n    ]);\n  };\n\n  const handlePointerUp = (): void => {\n    if (!isDrawing) {\n      return;\n    }\n\n    setIsDrawing(false);\n\n    if (!withTimestamp) {\n      return;\n    }\n\n    let currentStroke = currentPaths.slice(-1)?.[0] ?? null;\n\n    if (currentStroke === null) {\n      return;\n    }\n\n    const updatedStroke = {\n      ...currentStroke,\n      endTimestamp: Date.now(),\n    };\n\n    setCurrentPaths((currentPaths) => [\n      ...currentPaths.slice(0, -1),\n      updatedStroke,\n    ]);\n  };\n\n  return (\n    <Canvas\n      ref={svgCanvas}\n      width={width}\n      height={height}\n      className={className}\n      canvasColor={canvasColor}\n      backgroundImage={backgroundImage}\n      exportWithBackgroundImage={exportWithBackgroundImage}\n      preserveBackgroundImageAspectRatio={preserveBackgroundImageAspectRatio}\n      allowOnlyPointerType={allowOnlyPointerType}\n      style={style}\n      paths={currentPaths}\n      isDrawing={isDrawing}\n      onPointerDown={handlePointerDown}\n      onPointerMove={handlePointerMove}\n      onPointerUp={handlePointerUp}\n    />\n  );\n});\n","import React from 'react';\nimport {\n  CanvasPath,\n  ExportImageType,\n  ReactSketchCanvas,\n  ReactSketchCanvasProps,\n  ReactSketchCanvasRef,\n} from 'react-sketch-canvas';\n\ntype Handlers = [string, () => void, string][];\n\ninterface InputFieldProps {\n  fieldName: keyof ReactSketchCanvasProps;\n  type?: string;\n  canvasProps: Partial<ReactSketchCanvasProps>;\n  setCanvasProps: React.Dispatch<\n    React.SetStateAction<Partial<ReactSketchCanvasProps>>\n  >;\n}\n\nfunction InputField({\n  fieldName,\n  type = 'text',\n  canvasProps,\n  setCanvasProps,\n}: InputFieldProps) {\n  const handleChange = ({\n    target,\n  }: React.ChangeEvent<HTMLInputElement>): void => {\n    setCanvasProps((prevCanvasProps: Partial<ReactSketchCanvasProps>) => ({\n      ...prevCanvasProps,\n      [fieldName]: target.value,\n    }));\n  };\n\n  const id = 'validation' + fieldName;\n\n  return (\n    <div className=\"p-2 col-10\">\n      <label htmlFor={id} className=\"form-label\">\n        {fieldName}\n      </label>\n      <input\n        name={fieldName}\n        type={type}\n        className=\"form-control\"\n        id={id}\n        value={canvasProps[fieldName] as string}\n        onChange={handleChange}\n        min={1}\n        max={30}\n      />\n    </div>\n  );\n}\n\nfunction App() {\n  const [canvasProps, setCanvasProps] = React.useState<\n    Partial<ReactSketchCanvasProps>\n  >({\n    className: 'react-sketch-canvas',\n    width: '100%',\n    height: '500px',\n    backgroundImage:\n      'https://upload.wikimedia.org/wikipedia/commons/7/70/Graph_paper_scan_1600x1000_%286509259561%29.jpg',\n    preserveBackgroundImageAspectRatio: 'none',\n    strokeWidth: 4,\n    eraserWidth: 5,\n    strokeColor: '#000000',\n    canvasColor: '#FFFFFF',\n    style: { borderRight: '1px solid #CCC' },\n    exportWithBackgroundImage: true,\n    withTimestamp: true,\n    allowOnlyPointerType: 'all',\n  });\n\n  const inputProps: Array<[keyof ReactSketchCanvasProps, 'text' | 'number']> = [\n    ['className', 'text'],\n    ['width', 'text'],\n    ['height', 'text'],\n    ['backgroundImage', 'text'],\n    ['preserveBackgroundImageAspectRatio', 'text'],\n    ['strokeWidth', 'number'],\n    ['eraserWidth', 'number'],\n  ];\n\n  const canvasRef = React.createRef<ReactSketchCanvasRef>();\n\n  const [dataURI, setDataURI] = React.useState<string>('');\n  const [svg, setSVG] = React.useState<string>('');\n  const [paths, setPaths] = React.useState<CanvasPath[]>([]);\n  const [lastStroke, setLastStroke] = React.useState<{\n    stroke: CanvasPath | null;\n    isEraser: boolean | null;\n  }>({ stroke: null, isEraser: null });\n  const [pathsToLoad, setPathsToLoad] = React.useState<string>('');\n  const [sketchingTime, setSketchingTime] = React.useState<number>(0);\n  const [exportImageType, setexportImageType] =\n    React.useState<ExportImageType>('png');\n\n  const imageExportHandler = async () => {\n    const exportImage = canvasRef.current?.exportImage;\n\n    if (exportImage) {\n      const exportedDataURI = await exportImage(exportImageType);\n      setDataURI(exportedDataURI);\n    }\n  };\n\n  const svgExportHandler = async () => {\n    const exportSvg = canvasRef.current?.exportSvg;\n\n    if (exportSvg) {\n      const exportedDataURI = await exportSvg();\n      setSVG(exportedDataURI);\n    }\n  };\n\n  const getSketchingTimeHandler = async () => {\n    const getSketchingTime = canvasRef.current?.getSketchingTime;\n\n    try {\n      if (getSketchingTime) {\n        const currentSketchingTime = await getSketchingTime();\n        setSketchingTime(currentSketchingTime);\n      }\n    } catch {\n      setSketchingTime(0);\n      console.error('With timestamp is disabled');\n    }\n  };\n\n  const penHandler = () => {\n    const eraseMode = canvasRef.current?.eraseMode;\n\n    if (eraseMode) {\n      eraseMode(false);\n    }\n  };\n\n  const eraserHandler = () => {\n    const eraseMode = canvasRef.current?.eraseMode;\n\n    if (eraseMode) {\n      eraseMode(true);\n    }\n  };\n\n  const undoHandler = () => {\n    const undo = canvasRef.current?.undo;\n\n    if (undo) {\n      undo();\n    }\n  };\n\n  const redoHandler = () => {\n    const redo = canvasRef.current?.redo;\n\n    if (redo) {\n      redo();\n    }\n  };\n\n  const clearHandler = () => {\n    const clearCanvas = canvasRef.current?.clearCanvas;\n\n    if (clearCanvas) {\n      clearCanvas();\n    }\n  };\n\n  const resetCanvasHandler = () => {\n    const resetCanvas = canvasRef.current?.resetCanvas;\n\n    if (resetCanvas) {\n      resetCanvas();\n    }\n  };\n\n  const createButton = (\n    label: string,\n    handler: () => void,\n    themeColor: string\n  ) => (\n    <button\n      key={label}\n      className={`btn btn-${themeColor} btn-block`}\n      type=\"button\"\n      onClick={handler}\n    >\n      {label}\n    </button>\n  );\n\n  const buttonsWithHandlers: Handlers = [\n    ['Undo', undoHandler, 'primary'],\n    ['Redo', redoHandler, 'primary'],\n    ['Clear All', clearHandler, 'primary'],\n    ['Reset All', resetCanvasHandler, 'primary'],\n    ['Pen', penHandler, 'secondary'],\n    ['Eraser', eraserHandler, 'secondary'],\n    ['Export Image', imageExportHandler, 'success'],\n    ['Export SVG', svgExportHandler, 'success'],\n    ['Get Sketching time', getSketchingTimeHandler, 'success'],\n  ];\n\n  const onChange = (updatedPaths: CanvasPath[]): void => {\n    setPaths(updatedPaths);\n  };\n\n  return (\n    <main className=\"container-fluid p-5\">\n      <header className=\"border-bottom p-3 d-flex align-items-end\">\n        <img\n          className=\"logo\"\n          src=\"https://i.imgur.com/ajs39FC.png\"\n          alt=\"React Sketch Canvas\"\n        />\n        <h1 className=\"title\">ReactSketchCanvas</h1>\n      </header>\n      <div className=\"row\">\n        <aside className=\"col-3 border-right\">\n          <header className=\"my-5\">\n            <h3>Props</h3>\n          </header>\n          <form>\n            {inputProps.map(([fieldName, type]) => (\n              <InputField\n                key={fieldName}\n                fieldName={fieldName}\n                type={type}\n                canvasProps={canvasProps}\n                setCanvasProps={setCanvasProps}\n              />\n            ))}\n            <div className=\"p-2 col-10 d-flex \">\n              <div>\n                <label htmlFor=\"strokeColorInput\" className=\"form-label\">\n                  strokeColor\n                </label>\n                <input\n                  type=\"color\"\n                  name=\"strokeColor\"\n                  className=\"form-control form-control-color\"\n                  id=\"strokeColorInput\"\n                  value={canvasProps.strokeColor}\n                  title=\"Choose stroke color\"\n                  onChange={(e) => {\n                    setCanvasProps(\n                      (prevCanvasProps: Partial<ReactSketchCanvasProps>) => ({\n                        ...prevCanvasProps,\n                        strokeColor: e.target.value,\n                      })\n                    );\n                  }}\n                ></input>\n              </div>\n              <div className=\"mx-4\">\n                <label htmlFor=\"canvasColorInput\" className=\"form-label\">\n                  canvasColor\n                </label>\n                <input\n                  name=\"canvasColor\"\n                  type=\"color\"\n                  className=\"form-control form-control-color\"\n                  id=\"canvasColorInput\"\n                  value={canvasProps.canvasColor}\n                  title=\"Choose stroke color\"\n                  onChange={(e) => {\n                    setCanvasProps(\n                      (prevCanvasProps: Partial<ReactSketchCanvasProps>) => ({\n                        ...prevCanvasProps,\n                        backgroundImage: '',\n                        canvasColor: e.target.value,\n                      })\n                    );\n                  }}\n                ></input>\n              </div>\n            </div>\n            <div className=\"p-2 col-10\">\n              <div className=\"form-check form-switch\">\n                <input\n                  className=\"form-check-input\"\n                  type=\"checkbox\"\n                  role=\"switch\"\n                  id=\"switchExportWithBackgroundImage\"\n                  checked={canvasProps.exportWithBackgroundImage}\n                  onChange={(e) => {\n                    setCanvasProps(\n                      (prevCanvasProps: Partial<ReactSketchCanvasProps>) => ({\n                        ...prevCanvasProps,\n                        exportWithBackgroundImage: e.target.checked,\n                      })\n                    );\n                  }}\n                />\n                <label\n                  className=\"form-check-label\"\n                  htmlFor=\"switchExportWithBackgroundImage\"\n                >\n                  exportWithBackgroundImage\n                </label>\n              </div>\n            </div>\n            <div className=\"p-2 col-10\">\n              <div className=\"form-check form-switch\">\n                <input\n                  className=\"form-check-input\"\n                  type=\"checkbox\"\n                  role=\"switch\"\n                  id=\"switchWithTimestamp\"\n                  checked={canvasProps.withTimestamp}\n                  onChange={(e) => {\n                    setCanvasProps(\n                      (prevCanvasProps: Partial<ReactSketchCanvasProps>) => ({\n                        ...prevCanvasProps,\n                        withTimestamp: e.target.checked,\n                      })\n                    );\n                  }}\n                />\n                <label\n                  className=\"form-check-label\"\n                  htmlFor=\"switchWithTimestamp\"\n                >\n                  withTimestamp\n                </label>\n              </div>\n            </div>\n            <div className=\"p-2\">\n              <label className=\"form-check-label\" htmlFor=\"exportImageType\">\n                exportImageType\n              </label>\n              <div id=\"exportImageType\" className=\"pt-2\">\n                <div className=\"form-check form-check-inline\">\n                  <input\n                    className=\"form-check-input\"\n                    type=\"radio\"\n                    name=\"exportImageType\"\n                    id=\"exportImageTypePng\"\n                    value=\"png\"\n                    checked={exportImageType === 'png'}\n                    onChange={() => {\n                      setexportImageType('png');\n                    }}\n                  />\n                  <label\n                    className=\"form-check-label\"\n                    htmlFor=\"exportImageTypePng\"\n                  >\n                    png\n                  </label>\n                </div>\n                <div className=\"form-check form-check-inline\">\n                  <input\n                    className=\"form-check-input\"\n                    type=\"radio\"\n                    name=\"exportImageType\"\n                    id=\"exportImageTypeJPEG\"\n                    value=\"touch\"\n                    checked={exportImageType === 'jpeg'}\n                    onChange={() => {\n                      setexportImageType('jpeg');\n                    }}\n                  />\n                  <label\n                    className=\"form-check-label\"\n                    htmlFor=\"exportImageTypeJPEG\"\n                  >\n                    jpeg\n                  </label>\n                </div>\n              </div>\n            </div>\n            <div className=\"p-2\">\n              <label\n                className=\"form-check-label\"\n                htmlFor=\"allowOnlyPointerType\"\n              >\n                allowOnlyPointerType\n              </label>\n              <div id=\"allowOnlyPointerType\" className=\"p-2\">\n                <div className=\"form-check form-check-inline\">\n                  <input\n                    className=\"form-check-input\"\n                    type=\"radio\"\n                    name=\"allowPointer\"\n                    id=\"allowPointerAll\"\n                    value=\"all\"\n                    checked={canvasProps.allowOnlyPointerType === 'all'}\n                    onChange={() => {\n                      setCanvasProps(\n                        (prevCanvasProps: Partial<ReactSketchCanvasProps>) => ({\n                          ...prevCanvasProps,\n                          allowOnlyPointerType: 'all',\n                        })\n                      );\n                    }}\n                  />\n                  <label className=\"form-check-label\" htmlFor=\"allowPointerAll\">\n                    all\n                  </label>\n                </div>\n                <div className=\"form-check form-check-inline\">\n                  <input\n                    className=\"form-check-input\"\n                    type=\"radio\"\n                    name=\"allowPointer\"\n                    id=\"allowPointerTouch\"\n                    value=\"touch\"\n                    checked={canvasProps.allowOnlyPointerType === 'touch'}\n                    onChange={() => {\n                      setCanvasProps(\n                        (prevCanvasProps: Partial<ReactSketchCanvasProps>) => ({\n                          ...prevCanvasProps,\n                          allowOnlyPointerType: 'touch',\n                        })\n                      );\n                    }}\n                  />\n                  <label\n                    className=\"form-check-label\"\n                    htmlFor=\"allowPointerTouch\"\n                  >\n                    touch\n                  </label>\n                </div>\n                <div className=\"form-check form-check-inline\">\n                  <input\n                    className=\"form-check-input\"\n                    type=\"radio\"\n                    name=\"allowPointer\"\n                    id=\"allowPointerMouse\"\n                    value=\"mouse\"\n                    checked={canvasProps.allowOnlyPointerType === 'mouse'}\n                    onChange={() => {\n                      setCanvasProps(\n                        (prevCanvasProps: Partial<ReactSketchCanvasProps>) => ({\n                          ...prevCanvasProps,\n                          allowOnlyPointerType: 'mouse',\n                        })\n                      );\n                    }}\n                  />\n                  <label\n                    className=\"form-check-label\"\n                    htmlFor=\"allowPointerMouse\"\n                  >\n                    mouse\n                  </label>\n                </div>\n                <div className=\"form-check form-check-inline\">\n                  <input\n                    className=\"form-check-input\"\n                    type=\"radio\"\n                    name=\"allowPointer\"\n                    id=\"allowPointerPen\"\n                    value=\"pen\"\n                    checked={canvasProps.allowOnlyPointerType === 'pen'}\n                    onChange={() => {\n                      setCanvasProps(\n                        (prevCanvasProps: Partial<ReactSketchCanvasProps>) => ({\n                          ...prevCanvasProps,\n                          allowOnlyPointerType: 'pen',\n                        })\n                      );\n                    }}\n                  />\n                  <label className=\"form-check-label\" htmlFor=\"allowPointerPen\">\n                    pen\n                  </label>\n                </div>\n              </div>\n              <div className=\"p-2 col-10\">\n                <label htmlFor=\"style\" className=\"form-label\">\n                  style\n                </label>\n                <textarea\n                  id=\"style\"\n                  className=\"dataURICode col-12\"\n                  onChange={(event) => {\n                    try {\n                      const style = JSON.parse(event.target.value);\n                      setCanvasProps(\n                        (prevCanvasProps: Partial<ReactSketchCanvasProps>) => ({\n                          ...prevCanvasProps,\n                          style: style,\n                        })\n                      );\n                    } catch {\n                      return;\n                    }\n                  }}\n                  rows={5}\n                  defaultValue={JSON.stringify(canvasProps.style, null, 2)}\n                />\n              </div>\n              <div className=\"p-2 col-10\">\n                <label htmlFor=\"pathsToLoad\" className=\"form-label\">\n                  Paths to load\n                </label>\n                <textarea\n                  name=\"pathsToLoad\"\n                  id=\"pathsToLoad\"\n                  className=\"dataURICode col-12\"\n                  rows={5}\n                  value={pathsToLoad}\n                  onChange={(e) => {\n                    setPathsToLoad(e.target.value);\n                  }}\n                />\n                <button\n                  type=\"button\"\n                  className=\"btn btn-primary\"\n                  onClick={() => {\n                    const pathsToUpdate = JSON.parse(pathsToLoad);\n\n                    canvasRef.current?.loadPaths(pathsToUpdate);\n                  }}\n                >\n                  Load Paths\n                </button>\n              </div>\n            </div>\n          </form>\n        </aside>\n        <section className=\"col-9\">\n          <header className=\"my-5\">\n            <h3>Canvas</h3>\n          </header>\n          <section className=\"row no-gutters canvas-area m-0 p-0\">\n            <div className=\"col-9 canvas p-0\">\n              <ReactSketchCanvas\n                ref={canvasRef}\n                onChange={onChange}\n                onStroke={(stroke, isEraser) =>\n                  setLastStroke({ stroke, isEraser })\n                }\n                {...canvasProps}\n              />\n            </div>\n            <div className=\"col-3 panel\">\n              <div className=\"d-grid gap-2\">\n                {buttonsWithHandlers.map(([label, handler, themeColor]) =>\n                  createButton(label, handler, themeColor)\n                )}\n              </div>\n            </div>\n          </section>\n\n          <section className=\"row image-export mt-5 p-3 justify-content-center align-items-start\">\n            <div className=\"col-5 row form-group\">\n              <div className=\"p-2\">\n                <label className=\"col-12\" htmlFor=\"paths\">\n                  Paths\n                </label>\n                <textarea\n                  id=\"paths\"\n                  className=\"dataURICode col-12\"\n                  readOnly\n                  rows={10}\n                  value={\n                    paths.length !== 0\n                      ? JSON.stringify(paths, null, 2)\n                      : 'Sketch to get paths'\n                  }\n                />\n              </div>\n              <div className=\"p-2\">\n                <label className=\"col-12\" htmlFor=\"last-stroke\">\n                  Last stroke\n                  {lastStroke.isEraser !== null &&\n                    ':' + (lastStroke.isEraser ? 'Eraser' : 'Pen')}\n                </label>\n                <textarea\n                  id=\"last-stroke\"\n                  className=\"dataURICode col-12\"\n                  readOnly\n                  rows={10}\n                  value={\n                    lastStroke.stroke !== null\n                      ? JSON.stringify(lastStroke.stroke, null, 2)\n                      : 'Sketch to get the last stroke'\n                  }\n                />\n              </div>\n            </div>\n            <div className=\"col-5 offset-2\">\n              <label className=\"col-12\" htmlFor=\"dataURI\">\n                Sketching time\n              </label>\n              <div id=\"sketchingTime\" className=\"sketchingTime\">\n                {(sketchingTime / 1000).toFixed(3)} sec\n              </div>\n            </div>\n          </section>\n\n          <section className=\"row image-export p-3 justify-content-center align-items-start\">\n            <div className=\"col-5 row form-group\">\n              <label className=\"col-12\" htmlFor=\"imageDataURI\">\n                Exported Data URI for imagetype\n              </label>\n              <textarea\n                id=\"imageDataURI\"\n                className=\"dataURICode col-12\"\n                readOnly\n                rows={10}\n                value={dataURI || 'Click on export image'}\n              />\n            </div>\n            <div className=\"col-5 offset-2\">\n              <p>Exported image</p>\n              <img\n                className=\"exported-image\"\n                id=\"exported-image\"\n                src={\n                  dataURI ||\n                  'https://via.placeholder.com/500x250/000000/FFFFFF/?text=Click on export image'\n                }\n                alt=\"exported\"\n              />\n            </div>\n          </section>\n\n          <section className=\"row image-export p-3 justify-content-center align-items-start\">\n            <div className=\"col-5 row form-group\">\n              <label className=\"col-12\" htmlFor=\"svgCode\">\n                Exported SVG code\n              </label>\n              <textarea\n                id=\"svgCode\"\n                className=\"dataURICode col-12\"\n                readOnly\n                rows={10}\n                value={svg || 'Click on export svg'}\n              />\n            </div>\n            <div className=\"col-5 offset-2\">\n              <p>Exported SVG</p>\n              {svg ? (\n                <span\n                  id=\"exported-svg\"\n                  className=\"exported-image\"\n                  dangerouslySetInnerHTML={{ __html: svg }}\n                />\n              ) : (\n                <img\n                  src=\"https://via.placeholder.com/500x250/000000/FFFFFF/?text=Click on export SVG\"\n                  alt=\"Svg Export\"\n                  id=\"exported-svg\"\n                  className=\"exported-image\"\n                />\n              )}\n            </div>\n          </section>\n        </section>\n      </div>\n    </main>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}